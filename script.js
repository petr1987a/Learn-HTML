document.addEventListener('DOMContentLoaded', () => {
    const boardElement = document.getElementById('chessBoard');
    const boardSize = 8; // 8x8 –¥–æ—Å–∫–∞

    function createBoard() {
        for (let row = 0; row < boardSize; row++) {
            for (let col = 0; col < boardSize; col++) {
                const square = document.createElement('div');
                square.classList.add('square');
                // square.dataset.row = row; // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å data-–∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
                // square.dataset.col = col;

                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –∫–ª–µ—Ç–∫–∏
                if ((row + col) % 2 === 0) {
                    square.style.backgroundColor = '#f0d9b5'; // –°–≤–µ—Ç–ª–∞—è –∫–ª–µ—Ç–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è")
                } else {
                    square.style.backgroundColor = '#b58863'; // –¢–µ–º–Ω–∞—è –∫–ª–µ—Ç–∫–∞
                }
                
                // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–∏–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏ (–ø–æ—Ç–æ–º —É–±–µ—Ä–µ–º)
                // square.textContent = `${String.fromCharCode(97 + col)}${boardSize - row}`; 
                
                boardElement.appendChild(square);
            }
        }
    }

    createBoard();
    console.log('–®–∞—Ö–º–∞—Ç–Ω–∞—è –¥–æ—Å–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞! Áõ§Èù¢ÁîüÊàêÂÆå‰∫ÜÔºÅ'); // –ù–µ–º–Ω–æ–≥–æ —è–ø–æ–Ω—Å–∫–æ–≥–æ –¥–ª—è –∫–æ–ª–æ—Ä–∏—Ç–∞ üòâ
});
