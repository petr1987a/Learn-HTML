// –î–æ–±–∞–≤—å —ç—Ç–æ –≤ –Ω–∞—á–∞–ª–æ script.js, –≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–∏ DOMContentLoaded, —á—Ç–æ–±—ã –±—ã–ª–æ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ
const PIECES = {
    'wK': '‚ôî', 'wQ': '‚ôï', 'wR': '‚ôñ', 'wB': '‚ôó', 'wN': '‚ôò', 'wP': '‚ôô', // –ë–µ–ª—ã–µ
    'bK': '‚ôö', 'bQ': '‚ôõ', 'bR': '‚ôú', 'bB': '‚ôù', 'bN': '‚ôû', 'bP': '‚ôü'  // –ß–µ—Ä–Ω—ã–µ
};

// –≠—Ç–æ –Ω–∞—à–∞ –Ω–∞—á–∞–ª—å–Ω–∞—è —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∞. –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫.
// 'r' - rook (–ª–∞–¥—å—è), 'n' - knight (–∫–æ–Ω—å), 'b' - bishop (—Å–ª–æ–Ω), 'q' - queen (—Ñ–µ—Ä–∑—å), 'k' - king (–∫–æ—Ä–æ–ª—å), 'p' - pawn (–ø–µ—à–∫–∞)
// –ú–∞–ª–µ–Ω—å–∫–∞—è –±—É–∫–≤–∞ - —á–µ—Ä–Ω—ã–µ, –±–æ–ª—å—à–∞—è - –±–µ–ª—ã–µ (–∏–ª–∏ –Ω–∞–æ–±–æ—Ä–æ—Ç, –∫–∞–∫ –¥–æ–≥–æ–≤–æ—Ä–∏–º—Å—è, –Ω–æ –¥–∞–≤–∞–π –¥–ª—è JS —Å–¥–µ–ª–∞–µ–º —Ç–∞–∫:
// –º–∞–ª–µ–Ω—å–∫–∞—è 'b' –∏–ª–∏ 'w' –≤ –Ω–∞—á–∞–ª–µ –∫–ª—é—á–∞ –≤ PIECES, –∞ –∑–¥–µ—Å—å –ø—Ä–æ—Å—Ç–æ —Ç–∏–ø —Ñ–∏–≥—É—Ä—ã)
// –ß—Ç–æ–±—ã –±—ã–ª–æ –ø—Ä–æ—â–µ —Å–æ–ø–æ—Å—Ç–∞–≤–∏—Ç—å —Å –¥–æ—Å–∫–æ–π, –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ - 8-—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å, –ø–æ—Å–ª–µ–¥–Ω–∏–π - 1-—è.
// –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –æ–∑–Ω–∞—á–∞–µ—Ç –ø—É—Å—Ç—É—é –∫–ª–µ—Ç–∫—É.
const INITIAL_BOARD_SETUP = [
    ['bR', 'bN', 'bB', 'bQ', 'bK', 'bB', 'bN', 'bR'], // 8-—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å (—á–µ—Ä–Ω—ã–µ)
    ['bP', 'bP', 'bP', 'bP', 'bP', 'bP', 'bP', 'bP'], // 7-—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å (—á–µ—Ä–Ω—ã–µ –ø–µ—à–∫–∏)
    ['', '', '', '', '', '', '', ''],
    ['', '', '', '', '', '', '', ''],
    ['', '', '', '', '', '', '', ''],
    ['', '', '', '', '', '', '', ''],
    ['wP', 'wP', 'wP', 'wP', 'wP', 'wP', 'wP', 'wP'], // 2-—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å (–±–µ–ª—ã–µ –ø–µ—à–∫–∏)
    ['wR', 'wN', 'wB', 'wQ', 'wK', 'wB', 'wN', 'wR']  // 1-—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å (–±–µ–ª—ã–µ)
];

document.addEventListener('DOMContentLoaded', () => {
    const boardElement = document.getElementById('chessBoard');
    const boardSize = 8;

    // –ù–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è createBoard –Ω–µ–º–Ω–æ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—Å—è
    function createBoardAndPlacePieces() {
        boardElement.innerHTML = ''; // –û—á–∏—â–∞–µ–º –¥–æ—Å–∫—É –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–æ–π (–Ω–∞ —Å–ª—É—á–∞–π –±—É–¥—É—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π)
        for (let row = 0; row < boardSize; row++) {
            for (let col = 0; col < boardSize; col++) {
                const square = document.createElement('div');
                square.classList.add('square');
                square.dataset.row = row; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ data-–∞—Ç—Ä–∏–±—É—Ç–∞—Ö
                square.dataset.col = col;

                if ((row + col) % 2 === 0) {
                    square.style.backgroundColor = '#f0d9b5'; // –°–≤–µ—Ç–ª–∞—è
                } else {
                    square.style.backgroundColor = '#b58863'; // –¢–µ–º–Ω–∞—è
                }

                // –†–∞—Å—Å—Ç–∞–≤–ª—è–µ–º —Ñ–∏–≥—É—Ä—ã
                const pieceCode = INITIAL_BOARD_SETUP[row][col]; // –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ —Ñ–∏–≥—É—Ä—ã –∏–∑ –Ω–∞—à–µ–π —Å—Ö–µ–º—ã
                if (pieceCode && PIECES[pieceCode]) {
                    square.textContent = PIECES[pieceCode]; // –°—Ç–∞–≤–∏–º Unicode-—Å–∏–º–≤–æ–ª
                    // –î–æ–±–∞–≤–∏–º –∫–ª–∞—Å—Å –¥–ª—è —Ü–≤–µ—Ç–∞ —Ñ–∏–≥—É—Ä—ã, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ —Å—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ
                    if (pieceCode.startsWith('w')) {
                        square.classList.add('white-piece');
                    } else if (pieceCode.startsWith('b')) {
                        square.classList.add('black-piece');
                    }
                }
                
                boardElement.appendChild(square);
            }
        }
    }

    createBoardAndPlacePieces(); // –í—ã–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    console.log('–®–∞—Ö–º–∞—Ç–Ω–∞—è –¥–æ—Å–∫–∞ —Å —Ñ–∏–≥—É—Ä–∞–º–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞! ÈßíÈÖçÁΩÆÂÆå‰∫ÜÔºÅ');
});
document.addEventListener('DOMContentLoaded', () => {
    const boardElement = document.getElementById('chessBoard');
    const boardSize = 8; // 8x8 –¥–æ—Å–∫–∞

    function createBoard() {
        for (let row = 0; row < boardSize; row++) {
            for (let col = 0; col < boardSize; col++) {
                const square = document.createElement('div');
                square.classList.add('square');
                // square.dataset.row = row; // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å data-–∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
                // square.dataset.col = col;

                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –∫–ª–µ—Ç–∫–∏
                if ((row + col) % 2 === 0) {
                    square.style.backgroundColor = '#f0d9b5'; // –°–≤–µ—Ç–ª–∞—è –∫–ª–µ—Ç–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è")
                } else {
                    square.style.backgroundColor = '#b58863'; // –¢–µ–º–Ω–∞—è –∫–ª–µ—Ç–∫–∞
                }
                
                // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–∏–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏ (–ø–æ—Ç–æ–º —É–±–µ—Ä–µ–º)
                // square.textContent = `${String.fromCharCode(97 + col)}${boardSize - row}`; 
                
                boardElement.appendChild(square);
            }
        }
    }

    createBoard();
    console.log('–®–∞—Ö–º–∞—Ç–Ω–∞—è –¥–æ—Å–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞! Áõ§Èù¢ÁîüÊàêÂÆå‰∫ÜÔºÅ'); // –ù–µ–º–Ω–æ–≥–æ —è–ø–æ–Ω—Å–∫–æ–≥–æ –¥–ª—è –∫–æ–ª–æ—Ä–∏—Ç–∞ üòâ
});
